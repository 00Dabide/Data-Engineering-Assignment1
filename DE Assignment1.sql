/*Creating the Schema and the tables*/
Drop Schema if Exists assignment;
Create Schema assignment;
Use assignment;

SET GLOBAL local_infile = true;

Drop Table if Exists
ACCOUNT_TRANSACTIONS,
ACCOUNT_TRANSACT_TYPES,
ACCOUNT_TYPES,
ACCOUNTS,
ORGANIZATIONS,
PARTIES,
PRODUCTS;

Create Table ACCOUNT_TRANSACT_TYPES(
ACTRNTP_KEY int NOT NULL,
ACTRNTP_DESC varchar(255) NOT NULL,
Primary Key(ACTRNTP_KEY)
);

Create Table ACCOUNT_TYPES(
ACCTP_KEY int NOT NULL,
ACCTP_DESC varchar(255),
Primary Key(ACCTP_KEY)
);

Create Table ORGANIZATIONS(
ORG_KEY int NOT NULL,
ORGH_UNIFIED_ID varchar(255) NOT NULL,
CITY varchar(255) NOT NULL,
ZIP int NOT NULL,
Primary Key(ORG_KEY)
);

Create Table PRODUCTS(
PROD_KEY int NOT NULL,
PROD_AGENDA_CODE varchar(255) NOT NULL,
PROD_AGENDA_NAME varchar(255) NOT NULL,
Primary Key(PROD_KEY)
);

Create Table PARTIES(
PT_UNIFIED_KEY bigint NOT NULL,
ORG_KEY int NOT NULL,
PTH_BIRTH_DATE varchar(255) NOT NULL,
PTH_CLIENT_FROM_DATE varchar(255) NOT NULL,
PTH_CLIENT_FROM_DATE_ALT varchar(255) NOT NULL,
PTTP_UNIFIED_ID varchar(255) NOT NULL,
PSGEN_UNIFIED_ID varchar(255) NOT NULL,
Primary Key(PT_UNIFIED_KEY),
Foreign Key(ORG_KEY) References ORGANIZATIONS(ORG_KEY)
);

Create Table ACCOUNTS(
ACC_KEY int NOT NULL,
ACCTP_KEY int NOT NULL,
PROD_KEY int NOT NULL,
ORG_KEY int NOT NULL,
PT_UNIFIED_KEY bigint NOT NULL,
ACCH_OPEN_DATE date NOT NULL,
ACCH_CLOSE_DATE date NOT NULL,
Primary Key(ACC_KEY),
Foreign Key(ACCTP_KEY) References ACCOUNT_TYPES(ACCTP_KEY),
Foreign Key(PROD_KEY) References PRODUCTS(PROD_KEY),
Foreign Key(ORG_KEY) References ORGANIZATIONS(ORG_KEY),
Foreign Key(PT_UNIFIED_KEY) References PARTIES(PT_UNIFIED_KEY)
);

Create Table ACCOUNT_TRANSACTIONS(
ACCTRN_KEY bigint NOT NULL,
ACC_KEY int NOT NULL,
ACCTP_KEY int NOT NULL,
ACTRNTP_KEY int NOT NULL,
ACCTRN_ACCOUNTING_DATE Date NOT NULL,
ACCTRN_AMOUNT_CZK int NOT NULL,
ACCTRN_AMOUNT_FX int NOT NULL,
CURR_ISO_CODE varchar(255) NOT NULL,
ACCTRN_CRDR_FLAG varchar(255) NOT NULL,
ACCTRN_CASH_FLAG varchar(255) NOT NULL,
ACCTRN_INTEREST_FLAG varchar(255) NOT NULL,
ACCTRN_TAX_FLAG varchar(255) NOT NULL,
ACCTRN_FEE_FLAG varchar(255) NOT NULL,
ACC_OTHER_ACCOUNT_KEY int NOT NULL,
ACCTP_OTHER_ACCOUNT_KEY int NOT NULL,
Primary Key(ACCTRN_KEY),
Foreign Key(ACC_KEY) References ACCOUNTS(ACC_KEY),
Foreign Key(ACCTP_KEY) References ACCOUNT_TYPES(ACCTP_KEY),
Foreign Key(ACTRNTP_KEY) References ACCOUNT_TRANSACT_TYPES(ACTRNTP_KEY),
Foreign Key(ACC_OTHER_ACCOUNT_KEY) References ACCOUNTS(ACC_KEY),
Foreign Key(ACCTP_OTHER_ACCOUNT_KEY) References ACCOUNT_TYPES(ACCTP_KEY)
);

/*Loading data to the tables*/

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/ACCOUNT_TRANSACTIONS.csv' 
INTO TABLE ACCOUNT_TRANSACTIONS 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(ACCTRN_KEY,
ACC_KEY,
ACCTP_KEY,
ACTRNTP_KEY,
ACCTRN_ACCOUNTING_DATE,
ACCTRN_AMOUNT_CZK,
ACCTRN_AMOUNT_FX,
CURR_ISO_CODE,
ACCTRN_CRDR_FLAG,
ACCTRN_CASH_FLAG,
ACCTRN_INTEREST_FLAG,
ACCTRN_TAX_FLAG,
ACCTRN_FEE_FLAG,
ACC_OTHER_ACCOUNT_KEY,
ACCTP_OTHER_ACCOUNT_KEY);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/ACCOUNT_TRANSACT_TYPES.csv' 
INTO TABLE ACCOUNT_TRANSACT_TYPES 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(ACTRNTP_KEY,
ACTRNTP_DESC);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/ACCOUNT_TYPES.csv' 
INTO TABLE ACCOUNT_TYPES 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(ACCTP_KEY,
ACCTP_DESC);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/ACCOUNTS.csv' 
INTO TABLE ACCOUNTS 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(ACC_KEY,
ACCTP_KEY,
PROD_KEY,
ORG_KEY,
PT_UNIFIED_KEY,
ACCH_OPEN_DATE,
ACCH_CLOSE_DATE);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/ORGANIZATIONS.csv' 
INTO TABLE ORGANIZATIONS
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(ORG_KEY,
ORGH_UNIFIED_ID,
CITY,
ZIP);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/PARTIES.csv' 
INTO TABLE PARTIES 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(PT_UNIFIED_KEY,
ORG_KEY,
PTH_BIRTH_DATE,
PTH_CLIENT_FROM_DATE,
PTH_CLIENT_FROM_DATE_ALT,
PTTP_UNIFIED_ID,
PSGEN_UNIFIED_ID);

LOAD DATA LOCAL INFILE 'D:/GITHUB/SQL Practice/Data-Engineering-Assignment1/Data/PRODUCTS.csv' 
INTO TABLE PRODUCTS 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 LINES
(PROD_KEY,
PROD_AGENDA_CODE,
PROD_AGENDA_NAME);
--
/*QUESTIONS*/
--
/*Select every cash transactions*/
Drop view if exists Cash_Transactions;

Create view Cash_Transactions as
Select * from account_transactions
Where ACCTRN_CASH_FLAG = 'Y';

/*Select closed accounts*/
Drop view if exists Closed_accounts;

Create view Closed_accounts as
Select * From accounts
Where ACCH_CLOSE_DATE <> '3000-01-01'
